{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}


{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
{% set house_label = node.field_select_house.0.parent.entity.label.value %}
{% set field_color = node.field_select_house.0.parent.entity.field_color.value %}
{% set field_image = node.field_select_house.0.parent.entity.field_image.value %}

<article{{ attributes.addClass(classes) }}>

    {{ title_prefix }}
  <section class="hero-banner without-image" style="background-color: #{{field_color}};">
  <style>
    .hero-banner .container:before {
      background: #b8bdb8;
     }
  </style>
  <div class="container">
    <div class="row">
      <div class="col-12 col-lg-6">
        <div class="breadcrumbs-block">
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="{{front_page_url}}/">Home</a></li>
              <li class="breadcrumb-item"><a href="{{front_page_url}}/group/{{node.field_select_house.0.parent.entity.id.value}}">{{house_label}} HOUSE</a></li>
              <li class="breadcrumb-item active" aria-current="page">About This House</li>
            </ol>
          </nav>

        </div>
        <div class="banner-info">
          <h1>About {{house_label}} House</h1>
        </div>

        <div class="internal-links">
            {% for menus in node.field_menus %}
              {# {{dump(menus.value['target_id'])}} #}
              <div class="dropdown">
                {% set items = simplify_menu(menus.value['target_id']) %}
                {% for menu_item in items.menu_tree %}

                    <a class="btn btn-secondary dropdown-toggle" >{{ menu_item.text }}</a>
                  <div class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton2">
                    <ul class="clearfix nav">
                      {% for submenu_item in menu_item.submenu %}
                      <li class="navigation__item nav-item">
                        <a href="{{ submenu_item.url }}" class="nav-link nav-link--">{{ submenu_item.text }}</a>
                      </li>
                      {% endfor %}
                    </ul>
                  </div>
                {% endfor %}
              </div>
            {% endfor %}
          </div>
      </div>
    </div>
  </div>
</section>

  {# <header>
    {% if label and not page %}
      <h2{{ title_attributes.addClass('node__title') }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {% if display_submitted %}
      <div class="node__meta">
        {{ author_picture }}
        {% block submitted %}
          <em{{ author_attributes }}>
            {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
          </em>
        {% endblock %}
        {{ metadata }}
      </div>
    {% endif %}
  </header> #}

  <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
    {{ content }}
  </div>
    {{ title_suffix }}
</article>
