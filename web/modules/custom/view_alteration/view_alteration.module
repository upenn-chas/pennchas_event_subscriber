<?php

use Drupal\Core\Entity\Query\QueryInterface;
use Drupal\views\Plugin\views\query\Sql;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;

/**
 * Implements hook_page_attachments().
 */
function view_alteration_page_attachments(array &$attachments)
{
  // Attach the custom JavaScript file for AJAX Views pager.
  $attachments['#attached']['library'][] = 'view_alteration/ajax_pager';
}

/**
 * Implements hook_theme().
 */
function view_alteration_theme()
{
  return [
    'ajax_pager' => [
      'version' => '1.0',
      'js' => [
        'js/ajax_pager.js',
      ],
    ],
  ];
}

/**
 * Implements hook_views_pre_view().
 */
function view_alteration_views_pre_view(ViewExecutable $view, $displayId, array &$args)
{
  if ($view->id() === 'event_calendar' && $displayId == 'page_1') {
    // dd($view);
  }
}

/**
 * Implements hook_views_query_alter().
 */
function view_alteration_views_query_alttter(ViewExecutable $view, Sql $query)
{
  if ($view->id() == 'event_calendar') {
    // dd($query->where);
    $eventType = \Drupal::request()->query->get('event_type');
    // $startDate = \Drupal::request()->query->get('start');
    // $endDate = \Drupal::request()->query->get('end');
    $contentType = \Drupal::request()->query->get('content_type');
    $campusWide = \Drupal::request()->query->get('campus_wide');
    $tables = $query->tables;

    if (!$eventType) {
      if (!isset($tables['node_field_data']['node__field_intended_audience'])) {
        $query->queueTable(
          'node__field_intended_audience',
          null,
          Views::pluginManager('join')->createInstance('standard', [
            'type' => 'LEFT',
            'table' => 'node__field_intended_audience',
            'alias' => 'node__field_intended_audience',
            'left_field' => 'nid',
            'field' => 'entity_id',
            'left_table' => 'node_field_data',
            'extra' => [
              [
                'field' => 'deleted',
                'value' => 0,
                'numeric' => true
              ]
            ],
          ])
        );
      }
      $evenTypeConditionGroup = $query->setWhereGroup('OR');
      $query->addWhere($evenTypeConditionGroup, 'node_field_data.type', 'notices', '=');
      $query->addWhere($evenTypeConditionGroup, 'node__field_intended_audience.field_intended_audience_value', ['floor_event', 'community_event'], 'IN');
    }

    // if($startDate && $endDate) {
    //   $startDate = strtotime($startDate .' 00:00:00');
    //   $endDate = strtotime($endDate .' 23:59:59');
    // } else {
    //   $startDate = strtotime(date('01-m-Y 00:00:00'));
    //   $endDate = strtotime(date('t-m-Y 23:59:59'));
    // }

    // $query->addWhere(0, 'node__field_event_schedule.field_event_schedule_value', $startDate, '>=');
    // $query->addWhere(0, 'node__field_event_schedule.field_event_schedule_end_value', $endDate, '<=');

    if ($contentType) {
      $query->addWhere(0, 'node_field_data.type', ['chas_event', 'notices'], 'IN');
    } else {
      $query->addWhere(0, 'node_field_data.type', 'chas_event', '=');
    }

    if (!isset($tables['node_field_data']['node__field_is_campus_wide'])) {
      $query->addTable(
        'node__field_is_campus_wide',
        null,
        Views::pluginManager('join')->createInstance('standard', [
          'type' => 'INNER',
          'table' => 'node__field_is_campus_wide',
          'alias' => 'node__field_is_campus_wide',
          'left_field' => 'nid',
          'field' => 'entity_id',
          'left_table' => 'node_field_data',
          'extra' => [
            [
              'field' => 'deleted',
              'value' => 0,
              'numeric' => true
            ]
          ],
        ])
      );
    }
    if (!$campusWide) {
      $query->addWhere(0, 'node__field_is_campus_wide.field_is_campus_wide_value', 1, '!=');
    } else {
      $campusConditionGroup = $query->setWhereGroup('OR');
      $query->addWhere($campusConditionGroup, 'node__field_is_campus_wide.field_is_campus_wide_value', 1, '=');
      $query->addWhere($campusConditionGroup, 'node__field_is_campus_wide.field_is_campus_wide_value', 0, '=');
      $query->addWhere($campusConditionGroup, 'node__field_is_campus_wide.field_is_campus_wide_value', null, 'IS');
    }
  }
}

function view_alteration_views_pre_execute(ViewExecutable $view)
{
  if ($view->id() === 'event_calendar') {
    // dd($view->build_info['query']);
  }
}
