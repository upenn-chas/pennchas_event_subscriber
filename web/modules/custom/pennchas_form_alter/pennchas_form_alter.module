<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\pennchas_form_alter\Hook\NodeInsertHook;
use Drupal\pennchas_form_alter\Hook\NodePreSaveHook;
use Drupal\pennchas_form_alter\Util\Constant;

function pennchas_form_alter_form_alter(array &$form, FormStateInterface $form_state, string $form_id)
{
    if ($form_id === 'user_role_form' || $form_id === 'group_role_add_form' || $form_id === 'group_role_edit_form') {
        pennchas_form_alter_role_form($form, $form_state);
    } else if ($form_id === 'node_room_form' || $form_id === 'node_room_edit_form') {
        $form['field_max_room_booking_duration']['widget'][0]['duration']['#h']['#max'] = 23;
        $form['field_max_room_booking_duration']['widget'][0]['duration']['#h']['#step'] = 1;
        $form['field_max_room_booking_duration']['widget'][0]['duration']['#i']['#max'] = 30;
        $form['field_max_room_booking_duration']['widget'][0]['duration']['#i']['#step'] = 30;
    }
}

function pennchas_form_alter_entity_presave(EntityInterface $entity)
{
    if ($entity instanceof NodeInterface) {
        (new NodePreSaveHook())->handle($entity);
    }
}

function pennchas_form_alter_node_insert(Node $node)
{
    $node_type = $node->getType();
    if ($node_type === Constant::NODE_RESERVE_ROOM || $node_type === Constant::NODE_ROOM) {
        (new NodeInsertHook())->handle($node);
    }
}


function pennchas_form_alter_entity_type_alter(&$entity_type)
{
    if (isset($entity_type['group_role'])) {
        $entity_keys = $entity_type['group_role']->get('entity_keys');
        $entity_keys['umbera_roles'] = 'umbera_roles';
        $entity_type['group_role']->set('entity_keys', $entity_keys);
    }
}

function pennchas_form_alter_entity_bundle_field_info_alter(&$fields, $entity_type, $bundle)
{
    if ($bundle === 'reserve_room') {
        if (isset($fields['field_room'])) {
            $fields['field_room']->addConstraint('AllowRoomConstraint');
        }

        if (isset($fields['field_event_schedule'])) {
            $fields['field_event_schedule']->addConstraint('RoomAvailableConstraint');
        }

        if (isset($fields['field_anticipated_participants'])) {
            $fields['field_anticipated_participants']->addConstraint('RoomMaxGuestConstraint');
        }
    }
}

function pennchas_form_alter_role_form(array &$form, FormStateInterface $form_state)
{
    $umbera_roles = [];
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('role_category');

    if (!empty($terms)) {
        foreach ($terms as $term) {
            $umbera_roles[$term->name] = $term->name;
        }

        $role = $form_state->getFormObject()->getEntity();
        $existing_umbera_roles = $role->getThirdPartySetting('pennchas_form_alter', 'umbera_roles');

        $form['umbera_roles'] = [
            '#type' => 'checkboxes',
            '#title' => t('Umbera Roles'),
            '#default_value' => $existing_umbera_roles ?: '',
            '#options' => $umbera_roles
        ];

        $form['actions']['submit']['#submit'][] = 'role_form_submit_handler';
    }
}

function role_form_validation($form, FormStateInterface $form_state)
{
    // dd($form_state->getErrors());
    $errors  = $form_state->getErrors();
    $form_state->clearErrors();
    // foreach($errors as $key => $error) {
    //     if( $key !== 'third_party_settings][pennchas_form_alter][umbera_roles') {
    //         $form_state->setErrorByName($key, $error);
    //     }
    // }

    $form_state->setValue('umbera_roles', $form_state->getValue('umbera_roles'));
}

function role_form_submit_handler(&$form, FormStateInterface $form_state)
{
    if ($form_state->has('umbera_roles')) {
        $umbera_roles = $form_state->getValue('umbera_roles');
        $umbera_roles = array_filter($umbera_roles);
        $role = $form_state->getFormObject()->getEntity();
        $role->setThirdPartySetting('pennchas_form_alter', 'umbera_roles', $umbera_roles);
        $role->save();
    }
}
