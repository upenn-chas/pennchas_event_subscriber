<?php

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\MessageCommand;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\group\Entity\Group;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\node_form_extension\Plugin\RoomReservationHandler;
use Drupal\user\Entity\Role;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;


function node_form_extension_entity_presave(EntityInterface $entity)
{
    if ($entity instanceof NodeInterface) {
        $node_type = $entity->bundle();
        if ($node_type === 'reserve_room') {
            $handler = new RoomReservationHandler();
            $handler->handlePreSave($entity);
        } else if ($node_type === 'room') {
            $url_alias = $entity->hasField('path') ? $entity->get('path')->alias : "";
            $nid = $entity->id();
            $node_alias = $url_alias ?: ('/' . slugify($entity->getTitle()));
            $group_id = getGroupIdsByEntity($nid);
            if (!empty($group_id)) {
                $group = Group::load($group_id);
                if ($group && $group->hasField('field_house_machine_name')) {
                    $group_machine_name = $group->get('field_house_machine_name')->value;
                    if (!empty($group_machine_name)) {
                        $node_alias = $group_machine_name . $node_alias;
                    }
                }
            }
            $entity->set('field_group_ref', $node_alias);
        }
    }
}

function node_form_extension_node_insert(Node $node)
{
    $node_type = $node->getType();
    if ($node_type === 'reserve_room') {
        $eventHandler = new RoomReservationHandler();
        $eventHandler->handleInsert($node);
    } else if ($node_type === 'room') {
        $node->set('field_qr_code', $node->toUrl('canonical', ['absolute' => true])->toString());
        $node->setNewRevision(false);
        $node->save();
    }
}

function node_form_extension_node_update(Node $node)
{
    // $node_type = $node->getType();
    // if ($node_type === 'room') {
    //     $node->set('field_qr_code', $node->toUrl('canonical', ['absolute' => true])->toString());
    //     // $node->setNewRevision(false);
    //     $node->save();
    // }
}

// use Drupal\Core\Render\BubbleableMetadata;
function getGroupIdsByEntity($nid)
{
    $query = \Drupal::database()->select('group_relationship_field_data', 'gr');
    $query->innerjoin('groups_field_data', 'gfd', 'gr.gid = gfd.id');
    $query->condition('gr.entity_id', $nid);

    // Don't include group user memberships in the query.
    $query->condition('gr.type', 'group-group_membership', '!=');

    $query->fields('gr', ['gid']);
    $result = $query->execute();
    $groupIds = [];
    foreach ($result as $record) {
        $groupIds = $record->gid;
    }
    return $groupIds;
}

function slugify($text, string $divider = '-')
{
    $text = preg_replace('~[^\pL\d]+~u', $divider, $text);
    $text = preg_replace('~[^-\w]+~', '', $text);
    $text = trim($text, $divider);
    $text = preg_replace('~-+~', $divider, $text);
    $text = strtolower($text);

    if (empty($text)) {
        return 'n-a';
    }

    return $text;
}
