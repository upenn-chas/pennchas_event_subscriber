<?php

use Drupal\node\NodeInterface;
use Drupal\node_event_form_ext\Plugin\EventCreateAndUpdate;
use Drupal\webform\Entity\Webform;


use Drupal\group\Entity\Group;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_form_alter()
 */
function node_event_form_ext_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, string $form_id)
{
    if ($form_id == 'views_exposed_form' && ($form['#id'] == 'views-exposed-form-my-events-my-pending-events' ||  $form['#id'] == 'views-exposed-form-my-events-my-events-block')) {
        if (isset($form['moderation_state'])) {
            $options = &$form['moderation_state']['#options'];
            if ($form['#id'] == 'views-exposed-form-my-events-my-pending-events') {
                if (isset($options['All'])) {
                    unset($options['All']);
                }
                unset($options['Editorial']['editorial-draft']);
                unset($options['Editorial']['editorial-archived']);
                unset($options['Editorial']['editorial-published']);
                unset($options['Editorial']['editorial-denied']);
            }
        }
    }
}

function node_event_form_ext_entity_presave(Drupal\Core\Entity\EntityInterface $entity)
{
    if ($entity instanceof NodeInterface && $entity->bundle() === 'chas_event') {
        $eventHandler = new EventCreateAndUpdate();
        if ($entity->isNew()) {
            $eventHandler->handlePreSaveEvent($entity);
        } else {
            $eventHandler->handlePreUpdateEvent($entity);
        }
    }
}

function node_event_form_ext_node_insert(\Drupal\node\Entity\Node $node)
{
    if ($node->getType() === 'chas_event') {
        $eventHandler = new EventCreateAndUpdate();
        $eventHandler->handleEventInsert($node);
    }
}

function node_event_form_ext_node_update(\Drupal\node\Entity\Node $node)
{
    if ($node->getType() === 'chas_event') {
        $eventHandler = new EventCreateAndUpdate();
        $eventHandler->handleEventUpdate($node);
    }
}
