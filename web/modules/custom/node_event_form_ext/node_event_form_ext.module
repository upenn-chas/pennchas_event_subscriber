<?php

use Drupal\node\NodeInterface;
use Drupal\node_event_form_ext\Plugin\EventCreateAndUpdate;
use Drupal\webform\Entity\Webform;


use Drupal\group\Entity\Group;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_form_alter()
 */
function node_event_form_ext_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, string $form_id)
{
    if ($form_id === 'node_chas_event_form' || $form_id === 'node_chas_event_edit_form') {
        $form['field_audience_floor']['#states'] = [
            'visible' => [
                ':input[name="field_intended_audience[floors_residents]"]' => [
                    'checked' => true
                ]
            ]
        ];

        // Enable program community field
        $form['field_program_communities']['#states'] = [
            'visible' => [
                ':input[name="field_intended_audience[program_community]"]' => [
                    'checked' => true
                ]
            ]
        ];

        if ($form_id === 'node_chas_event_form') {
            $form['field_college_houses']['#states'] = [
                'checked' => true,
            ];
        }

        // Enable Other field
        $form['field_intended_audience_other']['#states'] = [
            'visible' => [
                ':input[name="field_intended_audience[other]"]' => [
                    'checked' => true
                ]
            ]
        ];

        // Enable marketing releated fields for audience options
        $form['field_intended_audience_image']['#states'] = [
            'visible' => [
                [
                    ':input[name="field_intended_audience[all_house_residents]"]' => ['checked' => true],
                ],
                [
                    ':input[name="field_intended_audience[multiple_college_houses]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_first_year_students]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_second_year_students]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_upper_year_students]"]' => ['checked' => true]
                ]
            ],
        ];

        $form['field_intended_audience_attach']['#states'] = [
            'visible' => [
                [
                    ':input[name="field_intended_audience[all_house_residents]"]' => ['checked' => true],
                ],
                [
                    ':input[name="field_intended_audience[multiple_college_houses]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_first_year_students]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_second_year_students]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_upper_year_students]"]' => ['checked' => true]
                ]
            ],
        ];

        $form['field_marketing_blurb']['#states'] = [
            'visible' => [
                [
                    ':input[name="field_intended_audience[all_house_residents]"]' => ['checked' => true],
                ],
                [
                    ':input[name="field_intended_audience[multiple_college_houses]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_first_year_students]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_second_year_students]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_audience[all_upper_year_students]"]' => ['checked' => true]
                ]
            ],
        ];

        $form['field_event_schedule']['widget']['add_more']['#access'] = FALSE;

        if (isset($form['field_event_schedule']['widget']['#tabledrag'])) {
            unset($form['field_event_schedule']['widget']['#tabledrag']);
        }

        // Enable outcome fields
        $form['field_intended_outcomes_remarks']['#states'] = [
            'visible' => [
                [
                    ':input[name="field_intended_outcomes[learn_a_skill]"]' => ['checked' => true],
                ],
                [
                    ':input[name="field_intended_outcomes[gain_information]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_outcomes[connect_with_peers]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_outcomes[connect_with_resource]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_outcomes[connect_with_faculty]"]' => ['checked' => true]
                ],
                [
                    ':input[name="field_intended_outcomes[engage_in_an_activity]"]' => ['checked' => true]
                ]
            ],
        ];

        $form['#attached']['library'][] = 'node_event_form_ext/event_listeners';
        if ($form_id === 'node_chas_event_form') {
            $form['#attached']['library'][] = 'node_event_form_ext/default_select';
        }
    }
}

function node_event_form_ext_entity_presave(Drupal\Core\Entity\EntityInterface $entity)
{
    if ($entity instanceof NodeInterface && $entity->bundle() === 'chas_event') {
        $eventHandler = new EventCreateAndUpdate();
        if ($entity->isNew()) {
            $eventHandler->handlePreSaveEvent($entity);
        } else {
            $eventHandler->handlePreUpdateEvent($entity);
        }
    }

    $content_type = $entity->bundle();
    if($content_type == 'room'){
      $nid = $entity->id();
      $path = '/' . $entity->getTitle();
      $group_id = getGroupIdsByEntity($nid);
      if(!empty($group_id)){
        $group = Group::load($group_id);
        if ($group && $group->hasField('field_house_machine_name')) {
          $group_machine_name = $group->get('field_house_machine_name')->value;
          if(!empty($group_machine_name)){
            $node_alias = $group_machine_name.'/'.$path;
          }
        }
      }else{
        $node_alias = $path;
      }
      $custom_field = 'field_group_ref';
      $entity->set($custom_field, $node_alias);
    }
}

function node_event_form_ext_node_insert(\Drupal\node\Entity\Node $node)
{
    if ($node->getType() === 'chas_event') {
        $eventHandler = new EventCreateAndUpdate();
        $eventHandler->handleEventInsert($node);
    }
}

function node_event_form_ext_node_update(\Drupal\node\Entity\Node $node)
{
    if ($node->getType() === 'chas_event') {
        $eventHandler = new EventCreateAndUpdate();
        $eventHandler->handleEventUpdate($node);
    }
}

// use Drupal\Core\Render\BubbleableMetadata;
function getGroupIdsByEntity($nid) {
  $query = \Drupal::database()->select('group_relationship_field_data', 'gr');
  $query->innerjoin('groups_field_data', 'gfd', 'gr.gid = gfd.id');
  $query->condition('gr.entity_id', $nid);

  // Don't include group user memberships in the query.
  $query->condition('gr.type', 'group-group_membership', '!=');

  $query->fields('gr', ['gid']);
  $result = $query->execute();
  // dd($result->gid);
  $groupIds = [];
  foreach ($result as $record) {
    $groupIds = $record->gid;
    }
  // $groupIds = $result->gid;
  return $groupIds;
}

