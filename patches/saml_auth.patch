diff --git a/src/Controller/SimplesamlphpAuthController.php b/src/Controller/SimplesamlphpAuthController.php
index 8a084f2..0f827f0 100644
--- a/src/Controller/SimplesamlphpAuthController.php
+++ b/src/Controller/SimplesamlphpAuthController.php
@@ -200,6 +200,113 @@ class SimplesamlphpAuthController extends ControllerBase implements ContainerInj
       $this->simplesaml->externalAuthenticate();
     }
 
+    $authSource = new \SimpleSAML\Auth\Simple('default-sp'); 
+    $attributes = $authSource->getAttributes();
+    $employeeNumber = $attributes['employeeNumber'][0];
+    $eduPersonPrincipalName = $attributes['eduPersonPrincipalName'][0];
+    $eduPersonEntitlement = $attributes['eduPersonEntitlement'];
+    $field_last_name = $attributes['sn'][0];
+    $field_first_name = $attributes['givenName'][0];
+    $displayName = $attributes['displayName'][0];
+    $name = str_replace(', ', ' ', $displayName);
+
+    $current_user = \Drupal::currentUser();
+    $uid = $current_user->id();
+    $user = \Drupal\user\Entity\User::load($uid);
+    $group_roles_target_ids = [];
+    if($user){
+      $user->set('field_employee_number', $employeeNumber);
+      $user->set('field_edu_person_principal_name', $eduPersonPrincipalName);
+      $user->set('field_edu_person_entitlement', implode("\n", $eduPersonEntitlement));
+      $user->set('field_first_name', $field_first_name);
+      $user->set('field_last_name', $field_last_name);
+      $user->set('field_preferred_name', $name);
+      $user->save();
+    }
+
+    $query = \Drupal::entityQuery('group_role');
+    $role_ids = $query->execute();
+    $group_roles = \Drupal\group\Entity\GroupRole::loadMultiple($role_ids);
+    foreach ($group_roles as $role) {
+      $group_roles_target_ids[$role->id()] = $role->id();
+    }
+
+    $query = \Drupal::entityQuery('user_role');
+    $role_ids = $query->execute();
+    $user_roles = \Drupal\user\Entity\Role::loadMultiple($role_ids);
+    $drupal_user_roles = [];
+    foreach ($user_roles as $role) {
+      $drupal_user_roles[$role->id()] = $role->id();
+    }
+
+    // get all groups IDs by machine names
+    $group_machine_name_query = \Drupal::database()->select('group__field_house_machine_name', 'gfh')
+    ->fields('gfh', ['entity_id', 'field_house_machine_name_value']);
+    $gf_result = $group_machine_name_query->execute()->fetchAll();
+    $groups_data = [];
+    foreach ($gf_result as $row) {
+      $groups_data[$row->field_house_machine_name_value] = $row->entity_id;  // Collect the 'group_roles_target_id' values.
+    }
+    $excluded_roles = ['campus_partner', 'chas_technology', 'chas_professional_staff', 'chas_student_worker'];
+    $group_user_roles_ids = [];
+    $group_ids = [];
+    $drupal_user_roles_ids = [];
+    foreach ($eduPersonEntitlement as $row => $value) {
+      $array = explode('.', $value);
+      $stud_role = $array[count($array) - 2];
+      $last_string = end($array);
+      if($stud_role === 'student') { // Assign the reseident role if the string contains student keyword
+        $group_user_roles_ids['house1-resident'] = 'house1-resident';
+      } else if($last_string === 'ra') { // Assign RA role
+        $last_string = 'resident_advisor';
+      } else if ($last_string === 'faculty') {
+        $last_string = 'house_faculty';
+      }
+      // Asign that user into group
+      if (isset($groups_data[$last_string])) {
+        $group_ids[$last_string] = $groups_data[$last_string]; // Get the group that come from grouper
+      }
+      if (isset($drupal_user_roles[$last_string])) {
+        $drupal_user_roles_ids[$last_string] = $last_string; // Get the group roles from grouper
+      }
+      if (isset($group_roles_target_ids['house1-' . $last_string])) {
+        $group_user_roles_ids['house1-' . $last_string] = 'house1-' . $last_string; // Get drupal group role from grouper
+        if(in_array($last_string, ['house_faculty', 'house_coordinator', 'house_director'])) {
+          $drupal_user_roles_ids['group_layout_editor'] = 'group_layout_editor';
+        }
+      }
+    }
+
+    $group_user_roles_ids = array_values($group_user_roles_ids);
+    $drupal_user_roles_ids = array_values($drupal_user_roles_ids);
+   
+    foreach($groups_data as $machin_name => $group_id) {
+      $group = \Drupal\group\Entity\Group::load($group_id);
+      $membership = $group->getMember($user);
+      if($membership) {
+        $group->removeMember($user);
+      }
+      if(isset($group_ids[$machin_name])) {
+        $group->addMember($user, ['group_roles' => $group_user_roles_ids]);
+      }
+    }
+ 
+    if(isset($drupal_user_roles_ids)){
+      if ($user) {
+        foreach($user->getRoles() as $role) {
+          if ($role !== 'authenticated') {
+            $user->removeRole($role);
+          }
+        }
+        foreach ($drupal_user_roles_ids as $role) {
+          if (!$user->hasRole($role)) {
+            $user->addRole($role);
+          }
+        }
+        $user->save();
+      }
+    }
+
     // Check to see if we've set a cookie. If there is one, give it priority.
     if ($request->cookies->has('simplesamlphp_auth_returnto')) {
       $redirect = $request->cookies->get('simplesamlphp_auth_returnto');
