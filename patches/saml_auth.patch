diff --git a/src/Controller/SimplesamlphpAuthController.php b/src/Controller/SimplesamlphpAuthController.php
index 8a084f2..fa177f0 100644
--- a/src/Controller/SimplesamlphpAuthController.php
+++ b/src/Controller/SimplesamlphpAuthController.php
@@ -200,6 +200,127 @@ class SimplesamlphpAuthController extends ControllerBase implements ContainerInj
       $this->simplesaml->externalAuthenticate();
     }
 
+    $authSource = new \SimpleSAML\Auth\Simple('default-sp'); 
+    $attributes = $authSource->getAttributes();
+    $employeeNumber = $attributes['employeeNumber'][0];
+    $eduPersonPrincipalName = $attributes['eduPersonPrincipalName'][0];
+    $eduPersonEntitlement = $attributes['eduPersonEntitlement'];
+    $edu_person = implode(', ', $eduPersonEntitlement);
+    $field_last_name = $attributes['sn'][0];
+    $field_first_name = $attributes['givenName'][0];
+    $displayName = $attributes['displayName'][0];
+    $name = str_replace(', ', ' ', $displayName);
+
+    $current_user = \Drupal::currentUser();
+    $uid = $current_user->id();
+    $user = \Drupal\user\Entity\User::load($uid);
+    $group_roles_target_ids = [];
+    if($user){
+      $user->set('field_employee_number', $employeeNumber);
+      $user->set('field_edu_person_principal_name', $eduPersonPrincipalName);
+      $user->set('field_edu_person_entitlement', $edu_person);
+      $user->set('field_first_name', $field_first_name);
+      $user->set('field_last_name', $field_last_name);
+      $user->set('field_preferred_name', $name);
+      $user->save();
+    }
+
+    $query = \Drupal::entityQuery('group_role');
+    $role_ids = $query->execute();
+    $group_roles = \Drupal\group\Entity\GroupRole::loadMultiple($role_ids);
+    foreach ($group_roles as $role) {
+      $group_roles_target_ids[] = $role->id();
+    }
+    
+    $query = \Drupal::entityQuery('user_role');
+    $role_ids = $query->execute();
+    $drupal_user_roles = \Drupal\user\Entity\Role::loadMultiple($role_ids);
+    foreach ($drupal_user_roles as $role) {
+      $drupal_user_roles[] = $role->id();
+    }
+    $personentitlement = explode(", ", $edu_person);
+
+    // get all groups IDs by machine names
+    $group_machine_name_query = \Drupal::database()->select('group__field_house_machine_name', 'gfh')
+    ->fields('gfh', ['entity_id', 'field_house_machine_name_value']);
+    $gf_result = $group_machine_name_query->execute()->fetchAll();
+    $groups_data = [];
+    foreach ($gf_result as $row) {
+      $groups_data[$row->field_house_machine_name_value] = $row->entity_id;  // Collect the 'group_roles_target_id' values.
+    }
+    $excluded_roles = ['campus_partner', 'chas_technology', 'chas_professional_staff', 'chas_student_worker'];
+    foreach ($personentitlement as $row => $value) {
+      $array = explode('.', $value);
+      $last_string = end($array);
+      // Asign that user into group
+      if (array_key_exists($last_string, $groups_data)) {
+        $group_ids[] = $groups_data[$last_string]; // Get the group that come from grouper
+      }
+      if (in_array($last_string, $drupal_user_roles)) {
+        $drupal_user_roles_ids[] = $last_string; // Get the group roles from grouper
+      }
+      if (in_array('house1-' . $last_string, $group_roles_target_ids)) {
+        if(!in_array($last_string , $excluded_roles)){
+          $group_user_roles_ids[] = $last_string; //Getdrupal role from grouper
+        }
+      }
+    }
+    if (isset($group_ids) && isset($group_user_roles_ids)) {
+      foreach ($group_ids as $key => $group_id) {
+        foreach ($group_user_roles_ids as $gr_key => $group_user_roles_id) {
+          $query = \Drupal::database()->select('group_relationship_field_data', 'gr');
+          $query->fields('gr');
+          $query->condition('gr.entity_id', $uid);
+          $query->condition('gr.gid', $group_id); 
+          $group_results = $query->execute()->fetchObject();
+          if(!empty($group_results)){
+            if($group_results->plugin_id == 'group_membership'){
+              $groupData = \Drupal\group\Entity\Group::load($group_id);
+              if ($groupData->getMember($user)) {
+                $groupData->removeMember($user);
+
+                $values = ['group_roles' => []];
+                foreach ($group_user_roles_ids as $role_id) {
+                    // Add each role to the group member
+                    $values['group_roles'][] = 'house1-' . $role_id;
+                }
+                if (!$groupData->getMember($user)) {
+                  $groupData->addMember($user, $values);
+                }
+              }
+            }
+          }else{
+            // $values = ['group_roles' => 'house1-'.$group_user_roles_id];
+            $values = ['group_roles' => []];  
+            foreach ($group_user_roles_ids as $role_id) {
+                // Add each role to the group member
+                $values['group_roles'][] = 'house1-' . $role_id;
+            }
+            $groupData = \Drupal\group\Entity\Group::load($group_id);
+            if (!$groupData->getMember($user)) {
+              $groupData->addMember($user, $values);
+            }
+
+          }
+        }
+      }
+    }
+    if(isset($drupal_user_roles_ids)){
+      if ($user) {
+        foreach($user->getRoles() as $role) {
+          if ($role !== 'authenticated') {
+            $user->removeRole($role);
+          }
+        }
+        foreach ($drupal_user_roles_ids as $role) {
+          if (!$user->hasRole($role)) {
+            $user->addRole($role);
+          }
+        }
+        $user->save();
+      }
+    }
+
     // Check to see if we've set a cookie. If there is one, give it priority.
     if ($request->cookies->has('simplesamlphp_auth_returnto')) {
       $redirect = $request->cookies->get('simplesamlphp_auth_returnto');
